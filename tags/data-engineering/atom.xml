<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>EgorDm&#x27;s Blog - data engineering</title>
    <link href="https://egordmitriev.dev/tags/data-engineering/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://egordmitriev.dev"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-08-13T00:00:00+00:00</updated>
    <id>https://egordmitriev.dev/tags/data-engineering/atom.xml</id>
    <entry xml:lang="en">
        <title>Overview of Data Lineage</title>
        <published>2023-08-13T00:00:00+00:00</published>
        <updated>2023-08-13T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://egordmitriev.dev/blog/overview-of-data-lineage/" type="text/html"/>
        <id>https://egordmitriev.dev/blog/overview-of-data-lineage/</id>
        
        <content type="html">&lt;small&gt;
Originaly published as part of &lt;a href=&quot;https:&#x2F;&#x2F;www.luminis.eu&#x2F;blog&#x2F;data-quality-series-part-3-overview-of-data-lineage&#x2F;&quot; target=&quot;_blank&quot;&gt;Luminis Data Blog&lt;&#x2F;a&gt;.
&lt;&#x2F;small&gt;
&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#introduction&quot; aria-label=&quot;Anchor link for: introduction&quot;&gt;üîó&lt;&#x2F;a&gt;Introduction&lt;&#x2F;h2&gt;
&lt;p&gt;In this article, we will delve into the often overlooked, but crucial aspect of data quality ‚Äì data lineage.  Data lineage records the flow of data and all the transformations throughout its lifecycle, from source to destination. Understanding data lineage is vital for maintaining data integrity and transparency in data processes, making it an essential component of the data quality workflow.&lt;&#x2F;p&gt;
&lt;p&gt;We have previously explored the significance of data quality in our blog post, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.luminis.eu&#x2F;blog&#x2F;introduction-to-data-quality&#x2F;&quot;&gt;‚ÄúIntroduction to Data Quality‚Äù&lt;&#x2F;a&gt;, which emphasizes the importance of clean and standardized data for accurate analysis and decision-making. If you are interested in getting more hands-on experience with data quality testing, you can read our previous blog post, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.luminis.eu&#x2F;blog&#x2F;data-quality-testing-with-deequ-in-spark&#x2F;&quot;&gt;&amp;quot;Data Quality Testing with Deequ in Spark&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Now, we will take a closer look at data lineage, its benefits, and how it contributes to maintaining data reliability. As a whole, we aim to compile a comprehensive overview of important concepts to guide a user who is considering on implementing data lineage within their organization.&lt;&#x2F;p&gt;
&lt;p&gt;The rest of the blog is structured as follows:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;What is Data Lineage?&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Requirements for Effective Data Lineage&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Benefits of Data Lineage&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Tools for Data Lineage&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;what-is-data-lineage&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-is-data-lineage&quot; aria-label=&quot;Anchor link for: what-is-data-lineage&quot;&gt;üîó&lt;&#x2F;a&gt;What is Data Lineage?&lt;&#x2F;h2&gt;
&lt;p&gt;Traditionally, the data resided in a data warehouse with only a few connections to external systems. Today, the as the demand has grown, the data flows between a multitude of systems, teams, and (external) organizations. Consequently, it is easy to overlook the impact of a single change somewhere in the lifecycle of the data.&lt;&#x2F;p&gt;
&lt;p&gt;Data lineage refers to the steps a dataset took to reach its current state. It encompasses the entire lifecycle of data, from its creation or ingestion to its consumption and usage in various processes and applications. By understanding data lineage, organizations gain visibility into how data is transformed and manipulated as it moves through different systems, processes, and transformations. It is an important tool for data engineers to debug potential issues in the data flow processes.&lt;&#x2F;p&gt;
&lt;p&gt;There are two primary types of data lineage: table-level lineage and field-level lineage. Table-level lineage provides an overview of the tables or datasets involved in the data flow, whereas field-level lineage goes deeper, tracking the lineage of individual fields or columns within those tables.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requirements-for-effective-data-lineage&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#requirements-for-effective-data-lineage&quot; aria-label=&quot;Anchor link for: requirements-for-effective-data-lineage&quot;&gt;üîó&lt;&#x2F;a&gt;Requirements for Effective Data Lineage&lt;&#x2F;h2&gt;
&lt;p&gt;Data lineage is just like documentation, when done right, it shouldn&#x27;t put an additional burden on your development workflow, and in fact, should only enhance it. To harness the full potential of data lineage, there are some general guidelines that should be satisfied as described in &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.oreilly.com&#x2F;library&#x2F;view&#x2F;data-quality-fundamentals&#x2F;9781098112035&#x2F;&quot;&gt;Data Quality Fundamentals&lt;&#x2F;a&gt; book by Moses, et al.:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Fast Time to Value&lt;&#x2F;strong&gt;: Abstracting the relationships between data objects down to the field level is crucial for quick remediation. Simply tracking at the table level may be too broad and insufficient for understanding the impact of changes and identifying specific issues. (split point)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Secure by Design&lt;&#x2F;strong&gt;: Data lineage shouldn&#x27;t directly access the data. Instead, it should rely on metadata, logs, and queries to gather information about the data flow. This simplifies the design as well ensures that no potentially private business data leaks into your documentation.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Automation&lt;&#x2F;strong&gt;: Manual maintenance of data lineage becomes increasingly challenging and error-prone as data pipelines become more complex. Investing in an automated data lineage generation approach saves time and reduces the risk of human error.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Integration with Popular Data Tools&lt;&#x2F;strong&gt;: A data project typically orchestrates data flow between multiple tools. The lineage tracking should seamlessly integrate with these technologies to create a unified view of your business, rather than dictating your workflow.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;benefits-of-data-lineage&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#benefits-of-data-lineage&quot; aria-label=&quot;Anchor link for: benefits-of-data-lineage&quot;&gt;üîó&lt;&#x2F;a&gt;Benefits of Data Lineage&lt;&#x2F;h2&gt;
&lt;p&gt;Implementing robust data lineage practices offers several benefits to organizations:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Communication and Transparency&lt;&#x2F;strong&gt;: Data lineage acts as a communication channel between data producers and data consumers. It helps bridge the gap between different teams by providing a clear understanding of the impact of broken or changed data on downstream consumers.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Improved Data Quality and Trust&lt;&#x2F;strong&gt;: Data lineage allows organizations to build trust in their data assets. By providing visibility into the data&#x27;s journey and transformation, it enhances data quality, reliability, and accuracy. This, in turn, promotes better decision-making based on trustworthy information.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Compliance and Auditability&lt;&#x2F;strong&gt;: Data lineage supports compliance efforts by enabling organizations to demonstrate adherence to regulations, such as the General Data Protection Regulation (GDPR). It provides an audit trail of data usage and ensures transparency in data management practices.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Some practical applications of data lineage in use include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Debugging&lt;&#x2F;strong&gt;: When issues arise in data analysis or reporting, data lineage can be invaluable for root cause analysis. By tracing the lineage of problematic data, analysts can identify where the issue originated and take corrective action more efficiently.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Reducing Technical Debt&lt;&#x2F;strong&gt;: Data lineage helps identify columns or fields that are no longer in use or have been deprecated. By marking and propagating these changes downstream, organizations can reduce technical debt and streamline their data pipelines.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Governance&lt;&#x2F;strong&gt;: With privacy regulations and data governance becoming increasingly important, data lineage provides a way to track how personally identifiable information (PII) is used within an organization. It enables organizations to understand who has access to sensitive data, how it is utilized, and ensures compliance with data protection regulations.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;tools-for-data-lineage&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#tools-for-data-lineage&quot; aria-label=&quot;Anchor link for: tools-for-data-lineage&quot;&gt;üîó&lt;&#x2F;a&gt;Tools for Data Lineage&lt;&#x2F;h2&gt;
&lt;p&gt;Now, let&#x27;s explore some powerful tools that can help you establish and maintain a seamless data lineage process.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;openlineage&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#openlineage&quot; aria-label=&quot;Anchor link for: openlineage&quot;&gt;üîó&lt;&#x2F;a&gt;OpenLineage&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;openlineage.io&#x2F;&quot;&gt;OpenLineage&lt;&#x2F;a&gt; is an emerging industry standard for data lineage tracking that is gaining traction. It is supported by the Linux Foundation, Atronomer, Collibra. It &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;openlineage.io&#x2F;blog&#x2F;why-open-standard&quot;&gt;aims to establish a unified framework&lt;&#x2F;a&gt; for capturing, managing, and sharing data lineage metadata across various tools and platforms. OpenLineage provides a consistent way to represent data lineage, making it easier to integrate with different systems and tools. You can easily incorporate it with any tool by submitting events to its API endpoint.&lt;&#x2F;p&gt;
&lt;p&gt;One exciting integration with OpenLineage is the combination with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marquezproject.github.io&#x2F;marquez&#x2F;&quot;&gt;Marquez&lt;&#x2F;a&gt;, a metadata service that tracks data workflows and lineage, open-sourced by WeWork. Together, they offer a simple, yet powerful solution to maintain a comprehensive and standardized view of data lineage. With this integration, you can easily trace data transformations, dependencies, and the origin of data through various data pipelines.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;microsoft-purview&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#microsoft-purview&quot; aria-label=&quot;Anchor link for: microsoft-purview&quot;&gt;üîó&lt;&#x2F;a&gt;Microsoft Purview&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-ww&#x2F;security&#x2F;business&#x2F;microsoft-purview&quot;&gt;Microsoft Purview&lt;&#x2F;a&gt; is a comprehensive data governance and data cataloging solution that also offers &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;purview&#x2F;concept-data-lineage&quot;&gt;data lineage capabilities&lt;&#x2F;a&gt;. Purview is part of the Microsoft Azure ecosystem and integrates well with other Azure services. It allows organizations to discover, classify, and understand their data assets, making it easier to implement robust data lineage practices.&lt;&#x2F;p&gt;
&lt;p&gt;One notable feature of Purview is its integration with Azure Data Factory (ADF). While ADF provides some level of data lineage tracking through job dependencies, Purview enhances this functionality by offering a more unified and visual representation of data lineage across the data ecosystem.&lt;&#x2F;p&gt;



&lt;figure class=&quot;image-captions-figure&quot;&gt;
  &lt;img
    alt=&quot;Anomaly Detection on Row Count quality metric in Soda Cloud&quot;
    width=&quot;700&quot;
    height=&quot;282&quot;
    src=&quot;https:&amp;#x2F;&amp;#x2F;egordmitriev.dev&amp;#x2F;processed_images&amp;#x2F;MS-Purview-Lineage.388b62fc787624b7.png&quot;
  &gt;
  &lt;figcaption class=&quot;image-captions-caption&quot;&gt;&lt;p&gt;Data Lineage in Microsoft Purview&lt;&#x2F;p&gt;
&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;&lt;h3 id=&quot;datahub&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#datahub&quot; aria-label=&quot;Anchor link for: datahub&quot;&gt;üîó&lt;&#x2F;a&gt;Datahub&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;datahub-project&#x2F;datahub&quot;&gt;Datahub&lt;&#x2F;a&gt; is a versatile data platform that provides robust data lineage capabilities, among other features. It offers extensive integration support, making it suitable for various data environments. While it is open source, the installation is quite heavy and requires both Kafka and Elasticsearch to operate, making it a tough choice for small projects.&lt;&#x2F;p&gt;
&lt;p&gt;Datahub can handle large-scale data lineage requirements. Data engineers and data analysts can rely on Datahub to trace data paths, identify data inconsistencies, and ensure data quality across their pipelines, making it a one-stop shop data quality tool.&lt;&#x2F;p&gt;



&lt;figure class=&quot;image-captions-figure&quot;&gt;
  &lt;img
    alt=&quot;Anomaly Detection on Row Count quality metric in Soda Cloud&quot;
    width=&quot;700&quot;
    height=&quot;327&quot;
    src=&quot;https:&amp;#x2F;&amp;#x2F;egordmitriev.dev&amp;#x2F;processed_images&amp;#x2F;datahub-lineage.d493df7b70d15ac5.png&quot;
  &gt;
  &lt;figcaption class=&quot;image-captions-caption&quot;&gt;&lt;p&gt;Dataset Lineage overview in DataHub&lt;&#x2F;p&gt;
&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;&lt;h4 id=&quot;spline&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#spline&quot; aria-label=&quot;Anchor link for: spline&quot;&gt;üîó&lt;&#x2F;a&gt;Spline&lt;&#x2F;h4&gt;
&lt;p&gt;If your organization mainly utilizes Apache Spark for data processing, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;absaoss.github.io&#x2F;spline&#x2F;&quot;&gt;Spline&lt;&#x2F;a&gt; is an excellent tool to consider for data lineage tracking. Spline offers the ability to join lineage across multiple datasets, providing a comprehensive view of how data transformations take place.&lt;&#x2F;p&gt;
&lt;p&gt;One notable advantage of Spline is its compatibility with OpenLineage (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AbsaOSS&#x2F;spline-openlineage&quot;&gt;currently as POC&lt;&#x2F;a&gt;). This allows you to leverage OpenLineage&#x27;s ecosystem to combine lineage across environments for visualization.&lt;&#x2F;p&gt;



&lt;figure class=&quot;image-captions-figure&quot;&gt;
  &lt;img
    alt=&quot;Anomaly Detection on Row Count quality metric in Soda Cloud&quot;
    width=&quot;400&quot;
    height=&quot;300&quot;
    src=&quot;https:&amp;#x2F;&amp;#x2F;egordmitriev.dev&amp;#x2F;processed_images&amp;#x2F;spline_lineage.d9e3d629122c114c.jpg&quot;
  &gt;
  &lt;figcaption class=&quot;image-captions-caption&quot;&gt;&lt;p&gt;Dataset High Level Data Lineage overview in Spline UI&lt;&#x2F;p&gt;
&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;&lt;h4 id=&quot;dbt-data-build-tool-and-dagster&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#dbt-data-build-tool-and-dagster&quot; aria-label=&quot;Anchor link for: dbt-data-build-tool-and-dagster&quot;&gt;üîó&lt;&#x2F;a&gt;DBT (Data Build Tool) and Dagster&lt;&#x2F;h4&gt;
&lt;p&gt;DBT and Dagster are two powerful data tools that emphasize data-first practices and can significantly contribute to your data lineage efforts.&lt;&#x2F;p&gt;
&lt;p&gt;DBT is a popular data transformation tool that enables data engineers and analysts to model, transform, and organize data in a structured manner. By leveraging DBT&#x27;s features, you can ensure that your data lineage accurately reflects data transformations and helps maintain data integrity.&lt;&#x2F;p&gt;
&lt;p&gt;On the other hand, Dagster is a data orchestration tool designed to facilitate the development and management of data workflows. With Dagster, you can build robust data pipelines that capture data lineage effectively, making it easier to identify and resolve issues in your data processes.&lt;&#x2F;p&gt;



&lt;figure class=&quot;image-captions-figure&quot;&gt;
  &lt;img
    alt=&quot;Anomaly Detection on Row Count quality metric in Soda Cloud&quot;
    width=&quot;500&quot;
    height=&quot;467&quot;
    src=&quot;https:&amp;#x2F;&amp;#x2F;egordmitriev.dev&amp;#x2F;processed_images&amp;#x2F;dagster-lineage.31462da7369c6594.png&quot;
  &gt;
  &lt;figcaption class=&quot;image-captions-caption&quot;&gt;&lt;p&gt;Data Graph in Dagster Combining FiveTran, DBT and Tensorflow Assets&lt;&#x2F;p&gt;
&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;&lt;h4 id=&quot;apache-airflow&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#apache-airflow&quot; aria-label=&quot;Anchor link for: apache-airflow&quot;&gt;üîó&lt;&#x2F;a&gt;Apache Airflow&lt;&#x2F;h4&gt;
&lt;p&gt;Apache Airflow is a widely used workflow management platform that, while not a strict data lineage tool, supports data lineage indirectly through its connectors and integrations. By utilizing these connectors, you can associate data pipelines with metadata about the data sources, dependencies, and transformations.&lt;&#x2F;p&gt;
&lt;p&gt;While Airflow&#x27;s data lineage capabilities might not be as sophisticated as some dedicated data lineage tools, it can still play a significant role in providing visibility into your data workflows and their impact on downstream processes.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;üîó&lt;&#x2F;a&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;In conclusion, data lineage is a vital aspect of data quality, providing transparency in data processes and transformations. Building your lineage with best practices in mind, such as automation and the correct level of abstraction, brings a multitude of benefits like improved communication, enhanced data quality, and compliance support.&lt;&#x2F;p&gt;
&lt;p&gt;Powerful tools are available for establishing and maintaining data lineage, offering unified frameworks for metadata management and comprehensive tracking across workflows.&lt;&#x2F;p&gt;
&lt;p&gt;Embracing data lineage and leveraging these tools empowers everyone within the organization to make better decisions, ensure data reliability, and build trust in their data.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Data Quality Testing with Deequ in Spark</title>
        <published>2023-06-20T00:00:00+00:00</published>
        <updated>2023-06-20T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://egordmitriev.dev/blog/data-quality-testing-with-deequ-in-spark/" type="text/html"/>
        <id>https://egordmitriev.dev/blog/data-quality-testing-with-deequ-in-spark/</id>
        
        <content type="html">&lt;small&gt;
Originaly published as part of &lt;a href=&quot;https:&#x2F;&#x2F;www.luminis.eu&#x2F;blog&#x2F;data-quality-testing-with-deequ-in-spark&#x2F;&quot; target=&quot;_blank&quot;&gt;Luminis Data Blog&lt;&#x2F;a&gt;.
&lt;&#x2F;small&gt;
&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#introduction&quot; aria-label=&quot;Anchor link for: introduction&quot;&gt;üîó&lt;&#x2F;a&gt;Introduction&lt;&#x2F;h2&gt;
&lt;p&gt;In this blog, we will explore how to ensure data quality in a Spark Scala ETL (Extract, Transform, Load) job. To achieve this, we will leverage &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;awslabs&#x2F;deequ&quot;&gt;Deequ&lt;&#x2F;a&gt;, an open-source library, to define and enforce various data quality checks.&lt;&#x2F;p&gt;
&lt;p&gt;If you need a refresher on data quality and its importance in data processing pipelines, you can refer to our previous blog post, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.luminis.eu&#x2F;blog&#x2F;introduction-to-data-quality&#x2F;&quot;&gt;‚ÄúIntroduction to Data Quality‚Äù&lt;&#x2F;a&gt;. To recap, data quality is essential for accurate data analysis, decision-making, and achieving business objectives. It involves maintaining clean and standardized data that meets expectations. Ensuring data quality requires measuring and testing the data at different stages of the data pipeline. This may include unit testing, functional testing, and integration testing. A few testable properties of data are schema, freshness, quality, and volume which we will focus on in this blog.&lt;&#x2F;p&gt;
&lt;p&gt;To illustrate these concepts, we will use a mock dataset based on the Iowa Liquor Sales Dataset as a running example. The dataset as well as the complete code for this blog can be found in the following &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EgorDm&#x2F;deequ-spark-example&quot;&gt;GitHub repository&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The rest of the blog is structured as follows:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Technologies&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Setup&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;The Dataset&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Building Schema Checks&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Profiling Your Data&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Adding Data Quality Checks&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Collecting Data Quality Metrics&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Gracefully Handling Data Changes&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Anomaly Detection&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Conclusion&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;technologies&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#technologies&quot; aria-label=&quot;Anchor link for: technologies&quot;&gt;üîó&lt;&#x2F;a&gt;Technologies&lt;&#x2F;h2&gt;
&lt;p&gt;Ensuring data quality in Spark can be achieved using various tools and libraries. One notable option is Deequ, an open-source library developed by AWS. It is a simple, but featureful tool that integrates well into AWS Glue or other Spark runtimes. By incorporating Deequ into our pipeline, we can perform schema checks, validate quality constraints, detect anomalies, collect quality metrics for monitoring, and utilize data profiling to gain insights into the properties of our data. Deequ effectively translates high-level rules and metrics into optimized Spark code, using the full potential of your Spark cluster.&lt;&#x2F;p&gt;
&lt;p&gt;Other popular choices for data quality testing are tools like &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;greatexpectations.io&#x2F;&quot;&gt;Great Expectations&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.soda.io&#x2F;platform&quot;&gt;Soda Core&lt;&#x2F;a&gt;. These tools are rich in features, but also require additional configuration and setup, which may be explored in future blogs. For users already working within an AWS Glue ecosystem, exploring options that are tightly integrated with Glue, such as Deequ, can be more convenient and seamless.&lt;&#x2F;p&gt;
&lt;p&gt;For brevity, we will focus on adding data quality to bare-bones Spark ETL scripts. While the implementation is similar if you are using AWS Glue, we won&#x27;t cover it in this blog. Instead, you can find an example glue script in the code repository.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;setup&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#setup&quot; aria-label=&quot;Anchor link for: setup&quot;&gt;üîó&lt;&#x2F;a&gt;Setup&lt;&#x2F;h2&gt;
&lt;p&gt;To begin, you need to have a working Scala development environment. If you don&#x27;t, install Java, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.scala-lang.org&#x2F;download&#x2F;&quot;&gt;Scala&lt;&#x2F;a&gt;, and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.scala-sbt.org&#x2F;download.html&quot;&gt;sbt (Scala Build Tool)&lt;&#x2F;a&gt;. For Linux x86 the installation would look as follows:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Install Java (on Debian)&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apt install default-jre&lt;&#x2F;span&gt;

&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Install Coursier (Scala Version Manager)&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;curl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;fL&lt;&#x2F;span&gt; https:&#x2F;&#x2F;github.com&#x2F;coursier&#x2F;coursier&#x2F;releases&#x2F;latest&#x2F;download&#x2F;cs-x86_64-pc-linux.gz&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;gzip&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;d&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; cs&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-and z-shell&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;chmod&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; +x cs&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-and z-shell&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;.&#x2F;cs&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; setup&lt;&#x2F;span&gt;

&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Install Scala 2.12 and sbt&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;cs&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; install scala:2.12.15&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-and z-shell&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;cs&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; install scalac:2.12.15&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Next, download a compatible &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spark.apache.org&#x2F;downloads.html&quot;&gt;Apache Spark&lt;&#x2F;a&gt; distribution (version 3.3.x is recommended) and add the &lt;code&gt;bin&lt;&#x2F;code&gt; folder to your system path. If you can run &lt;code&gt;spark-submit&lt;&#x2F;code&gt;, you are all set.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Download Spark&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;curl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; https:&#x2F;&#x2F;dlcdn.apache.org&#x2F;spark&#x2F;spark-3.3.2&#x2F;spark-3.3.2-bin-hadoop3.tgz&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;output&lt;&#x2F;span&gt; hadoop.tgz&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;tar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; xvf hadoop.tgz&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;mv&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; spark-3.3.2-bin-hadoop3 &#x2F;usr&#x2F;local&#x2F;spark&lt;&#x2F;span&gt;

&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Add the following line to your .bashrc (adds Spark to PATH)&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;export&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;PATH&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;PATH&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;:&#x2F;usr&#x2F;local&#x2F;spark&#x2F;bin&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;sample-script&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#sample-script&quot; aria-label=&quot;Anchor link for: sample-script&quot;&gt;üîó&lt;&#x2F;a&gt;Sample Script&lt;&#x2F;h3&gt;
&lt;p&gt;If you haven&#x27;t already, clone the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EgorDm&#x2F;deequ-spark-example&quot;&gt;example project&lt;&#x2F;a&gt; and open it in your editor of choice.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;git clone git@github.com:EgorDm&#x2F;deequ-spark-example.git
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You will find an &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EgorDm&#x2F;deequ-spark-example&#x2F;blob&#x2F;master&#x2F;src&#x2F;main&#x2F;scala&#x2F;EmptyExample.scala&quot;&gt;empty example Spark script&lt;&#x2F;a&gt; that reads a CSV file and writes it in parquet format to the output path. It takes the input path, output path and a path for metric storage as command line arguments.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-scala&quot;&gt;def&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-scala&quot;&gt;main&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-scala&quot;&gt;sysArgs&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-ascription z-scala&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-scala&quot;&gt;Array&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-scala&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-scala&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-scala&quot;&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-ascription z-scala&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-primitive z-scala&quot;&gt;Unit&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-scala&quot;&gt;{&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-comment z-line z-double-slash z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-scala&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Parse job arguments  &lt;&#x2F;span&gt;
	&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;args&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Map&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;input_file_path&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; -&amp;gt; sysArgs&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;output_file_path&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; -&amp;gt; sysArgs&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;metrics_path&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; -&amp;gt; sysArgs&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	  
	&lt;span class=&quot;z-comment z-line z-double-slash z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-scala&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Read the CSV input file  &lt;&#x2F;span&gt;
	&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;rawDf&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; spark&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;read  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;option&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;header&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;true&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;csv&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;args&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;input_file_path&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	  
	logger&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;info&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-support z-function z-scala&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Do some preprocessing&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	  
	&lt;span class=&quot;z-comment z-line z-double-slash z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-scala&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Write the result to S3 in Parquet format  &lt;&#x2F;span&gt;
	rawDf&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;write  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;mode&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;overwrite&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;parquet&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;args&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;output_file_path&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
&lt;span class=&quot;z-punctuation z-section z-block z-end z-scala&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Compile the script with the following command, which will output the jar as &lt;code&gt;target&#x2F;scala-2.12&#x2F;glue-deequ_2.12-0.1.0.jar&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sbt compile &amp;amp;&amp;amp; sbt package
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Running this Spark job is straightforward:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;spark-submit \
	--class EmptyExample \  
	.&#x2F;target&#x2F;scala-2.12&#x2F;glue-deequ_2.12-0.1.0.jar \  
	&amp;quot;.&#x2F;data&#x2F;iowa_liquor_sales_lite&#x2F;year=2022&#x2F;iowa_liquor_sales_01.csv&amp;quot; \  
	&amp;quot;.&#x2F;outputs&#x2F;sales&#x2F;iowa_liquor_sales_processed&amp;quot; \  
	&amp;quot;.&#x2F;outputs&#x2F;dataquality&#x2F;iowa_liquor_sales_processed&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;include-deequ-library&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#include-deequ-library&quot; aria-label=&quot;Anchor link for: include-deequ-library&quot;&gt;üîó&lt;&#x2F;a&gt;Include Deequ Library&lt;&#x2F;h3&gt;
&lt;p&gt;Since we will be using the Deequ library, it must be added as a dependency to our project. While the library is already included in the project&#x27;s dependencies, it is deliberately not bundled into the compiled jar. Instead, you can use the following command to extract it to the &lt;code&gt;target&#x2F;libs&lt;&#x2F;code&gt; folder, or you can download it yourself from the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;repo1.maven.org&#x2F;maven2&#x2F;com&#x2F;amazon&#x2F;deequ&#x2F;deequ&#x2F;&quot;&gt;maven repository&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sbt copyRuntimeDependencies
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pass the &lt;code&gt;--jars&lt;&#x2F;code&gt; option to the Spark job, so the library is loaded at runtime:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;spark-submit&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;	--&lt;&#x2F;span&gt;jars&lt;&#x2F;span&gt; .&#x2F;target&#x2F;libs&#x2F;deequ-2.0.3-spark-3.3.jar \&lt;span class=&quot;z-invalid z-illegal z-extraneous-spaces-after-line-continuation z-shell&quot;&gt;  &lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;	&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;--class&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; ExampleSpark \&lt;span class=&quot;z-invalid z-illegal z-extraneous-spaces-after-line-continuation z-shell&quot;&gt;  &lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;	&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;.&#x2F;target&#x2F;scala-2.12&#x2F;glue-deequ_2.12-0.1.0.jar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; \&lt;span class=&quot;z-invalid z-illegal z-extraneous-spaces-after-line-continuation z-shell&quot;&gt;  &lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;	&lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;.&#x2F;data&#x2F;iowa_liquor_sales_lite&#x2F;year=2022&#x2F;iowa_liquor_sales_01.csv&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; \&lt;span class=&quot;z-invalid z-illegal z-extraneous-spaces-after-line-continuation z-shell&quot;&gt;  &lt;&#x2F;span&gt;
	&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;.&#x2F;outputs&#x2F;sales&#x2F;iowa_liquor_sales_processed&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; \&lt;span class=&quot;z-invalid z-illegal z-extraneous-spaces-after-line-continuation z-shell&quot;&gt;  &lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;	&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;.&#x2F;outputs&#x2F;dataquality&#x2F;iowa_liquor_sales_processed&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;  &lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After running the command, the output parquet files are stored in &lt;code&gt;outputs&#x2F;sales&#x2F;iowa_liquor_sales_processed&lt;&#x2F;code&gt; and can be inspected with Spark, Pandas, or data tools like &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;duckdb.org&#x2F;docs&#x2F;guides&#x2F;data_viewers&#x2F;tad.html&quot;&gt;tad&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-dataset&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-dataset&quot; aria-label=&quot;Anchor link for: the-dataset&quot;&gt;üîó&lt;&#x2F;a&gt;The Dataset&lt;&#x2F;h2&gt;
&lt;p&gt;Now that we have our example ETL script working, let&#x27;s take a look at the dataset. The mock dataset is based on the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;data.iowa.gov&#x2F;Sales-Distribution&#x2F;Iowa-Liquor-Sales&#x2F;m3tr-qhgy&quot;&gt;Iowa Liquor Sales dataset&lt;&#x2F;a&gt;, which is simplified and modified to contain various data issues representative of the real world.&lt;&#x2F;p&gt;
&lt;p&gt;The dataset is partitioned by year, where each partition introduces schema and&#x2F;or distribution changes.&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;data&#x2F;iowa_liquor_sales_lite&#x2F;
	year=2020&#x2F;iowa_liquor_sales_*.csv
	year=2021&#x2F;iowa_liquor_sales_*.csv
	year=2022&#x2F;iowa_liquor_sales_*.csv
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Assuming that we have already conducted exploratory data analysis, we will start building our data quality checks by using the 2022 partition and will consider at the end how the other partitions impact our solution.&lt;&#x2F;p&gt;



&lt;figure class=&quot;image-captions-figure&quot;&gt;
  &lt;img
    alt=&quot;Anomaly Detection on Row Count quality metric in Soda Cloud&quot;
    width=&quot;600&quot;
    height=&quot;186&quot;
    src=&quot;https:&amp;#x2F;&amp;#x2F;egordmitriev.dev&amp;#x2F;processed_images&amp;#x2F;iowa_liquor_dataset_preview-e1686825218211.e910aa72ffde4ad6.png&quot;
  &gt;
  &lt;figcaption class=&quot;image-captions-caption&quot;&gt;&lt;p&gt;Preview of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EgorDm&#x2F;deequ-spark-example&#x2F;blob&#x2F;master&#x2F;data&#x2F;iowa_liquor_sales_lite&#x2F;year%3D2022&#x2F;iowa_liquor_sales_01.csv&quot;&gt;Iowa Liquor Sales dataset&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;&lt;h2 id=&quot;building-schema-checks&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#building-schema-checks&quot; aria-label=&quot;Anchor link for: building-schema-checks&quot;&gt;üîó&lt;&#x2F;a&gt;Building Schema Checks&lt;&#x2F;h2&gt;
&lt;p&gt;The first step is validating the schema of our dataset. A schema defines the structure and organization of the data, including the names and types of columns. By performing schema checks, we can ensure that our data conforms to the expected structure and identify any inconsistencies or missing columns.&lt;&#x2F;p&gt;
&lt;p&gt;To define the schema, we use Deequ&#x27;s &lt;code&gt;RowLevelSchema&lt;&#x2F;code&gt; class. Here, each column and its properties are defined using methods like &lt;code&gt;withStringColumn&lt;&#x2F;code&gt;, &lt;code&gt;withIntColumn&lt;&#x2F;code&gt;, &lt;code&gt;withTimestampColumn&lt;&#x2F;code&gt;, or &lt;code&gt;withDecimalColumn&lt;&#x2F;code&gt;. For our dataset, the schema is as follows:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;schema&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;RowLevelSchema&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;withStringColumn&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Invoice&#x2F;Item Number&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; isNullable &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-scala&quot;&gt;false&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;withStringColumn&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Date&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; isNullable &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-scala&quot;&gt;false&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;withStringColumn&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Store Name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; isNullable &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-scala&quot;&gt;false&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;withStringColumn&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Zip Code&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; isNullable &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-scala&quot;&gt;false&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;withStringColumn&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Vendor Name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; isNullable &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-scala&quot;&gt;false&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;withIntColumn&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Item Number&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; isNullable &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-scala&quot;&gt;false&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;withIntColumn&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Bottles Sold&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; isNullable &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-scala&quot;&gt;false&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;withDecimalColumn&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Sale&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; isNullable &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-scala&quot;&gt;false&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; precision &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;12&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; scale &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;withDecimalColumn&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Volume Sold (Liters)&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; isNullable &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-scala&quot;&gt;true&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; precision &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;12&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; scale &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After defining the schema, it can be validated against the data (&lt;code&gt;rawDf&lt;&#x2F;code&gt;) using the &lt;code&gt;RowLevelSchemaValidator.validate&lt;&#x2F;code&gt; method.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;schemaResult&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;RowLevelSchemaValidator&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;validate&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;rawDf&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; schema&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
&lt;span class=&quot;z-keyword z-control z-flow z-scala&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;schemaResult&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;numInvalidRows &amp;gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-scala&quot;&gt;{&lt;&#x2F;span&gt;  
	logger&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;error&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-support z-function z-scala&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Schema validation failed with &lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;${&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-scala z-embedded&quot;&gt;schemaResult&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;numInvalidRows&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;}&lt;&#x2F;span&gt; invalid rows. Results: &lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;${&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-scala z-embedded&quot;&gt;schemaResult&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	schemaResult&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;invalidRows&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;show&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;10&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; truncate &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-scala&quot;&gt;false&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	sys&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;exit&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
&lt;span class=&quot;z-punctuation z-section z-block z-end z-scala&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;validDf&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; schemaResult&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;validRows
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The result (&lt;code&gt;schemaResult&lt;&#x2F;code&gt;) contains two Data Frames, specifically the valid rows that conform to the schema and invalid rows that do not. In some cases, data quarantining can be applied by preserving invalid rows and moving forward. Here, we will break and display faulty data in the console instead.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;profiling-your-data&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#profiling-your-data&quot; aria-label=&quot;Anchor link for: profiling-your-data&quot;&gt;üîó&lt;&#x2F;a&gt;Profiling Your Data&lt;&#x2F;h2&gt;
&lt;p&gt;The next step is data profiling, which is an essential step for understanding the characteristics and properties of your dataset. It provides insights into the structure, content, and statistical properties of the data, enabling you to identify potential issues or anomalies, and make informed decisions about data cleansing or transformation.&lt;&#x2F;p&gt;
&lt;p&gt;Deequ provides a convenient way to profile your data using the &lt;code&gt;ConstraintSuggestionRunner&lt;&#x2F;code&gt;. Based on the analyzed data, it collects various statistics and suggests constraints using predefined rules.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;ConstraintSuggestionRunner&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;onData&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;validDf&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;useSparkSession&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;spark&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;overwritePreviousFiles&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-language z-scala&quot;&gt;true&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;saveConstraintSuggestionsJsonToPath&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;
		&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-support z-function z-scala&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;${&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-scala z-embedded&quot;&gt;args&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;metrics_path&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;}&lt;&#x2F;span&gt;&#x2F;suggestions.json&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;saveColumnProfilesJsonToPath&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;
		&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-support z-function z-scala&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;${&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-scala z-embedded&quot;&gt;args&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;metrics_path&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;}&lt;&#x2F;span&gt;&#x2F;profiles.json&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;addConstraintRules&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Rules&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;DEFAULT&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;run&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In the metrics folder, &lt;code&gt;profiles.json&lt;&#x2F;code&gt; is created as output. It contains extracted statistics in a semi-structured format which can be useful for data quality checks creation, as well as, data monitoring.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; class=&quot;language-json z-code&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;columns&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-meta z-sequence z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-json&quot;&gt;[&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-json&quot;&gt;{&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;column&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Vendor Name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;dataType&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;String&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;isDataTypeInferred&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;true&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;completeness&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-json&quot;&gt;1&lt;span class=&quot;z-punctuation z-separator z-decimal z-json&quot;&gt;.&lt;&#x2F;span&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;approximateNumDistinctValues&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-json&quot;&gt;166&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-json&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-json&quot;&gt;,&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-json&quot;&gt;{&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;column&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Item Number&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;dataType&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Integral&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;isDataTypeInferred&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;false&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;completeness&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-json&quot;&gt;1&lt;span class=&quot;z-punctuation z-separator z-decimal z-json&quot;&gt;.&lt;&#x2F;span&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;approximateNumDistinctValues&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-json&quot;&gt;1469&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;mean&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-json&quot;&gt;59981&lt;span class=&quot;z-punctuation z-separator z-decimal z-json&quot;&gt;.&lt;&#x2F;span&gt;83674981477&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;maximum&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-json&quot;&gt;995530&lt;span class=&quot;z-punctuation z-separator z-decimal z-json&quot;&gt;.&lt;&#x2F;span&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;minimum&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-json&quot;&gt;567&lt;span class=&quot;z-punctuation z-separator z-decimal z-json&quot;&gt;.&lt;&#x2F;span&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;sum&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-json&quot;&gt;2&lt;span class=&quot;z-punctuation z-separator z-decimal z-json&quot;&gt;.&lt;&#x2F;span&gt;42866457E8&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;stdDev&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-json&quot;&gt;104855&lt;span class=&quot;z-punctuation z-separator z-decimal z-json&quot;&gt;.&lt;&#x2F;span&gt;01628803412&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;approxPercentiles&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-json&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-json&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-json&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-json&quot;&gt;,&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-json&quot;&gt;{&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;column&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Volume Sold (Liters)&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;dataType&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Fractional&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;isDataTypeInferred&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;false&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;completeness&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-json&quot;&gt;0&lt;span class=&quot;z-punctuation z-separator z-decimal z-json&quot;&gt;.&lt;&#x2F;span&gt;8992343788589775&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;approximateNumDistinctValues&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-json&quot;&gt;97&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;mean&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-json&quot;&gt;11&lt;span class=&quot;z-punctuation z-separator z-decimal z-json&quot;&gt;.&lt;&#x2F;span&gt;238700906344382&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;maximum&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-json&quot;&gt;1512&lt;span class=&quot;z-punctuation z-separator z-decimal z-json&quot;&gt;.&lt;&#x2F;span&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;minimum&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-json&quot;&gt;0&lt;span class=&quot;z-punctuation z-separator z-decimal z-json&quot;&gt;.&lt;&#x2F;span&gt;05&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;sum&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-json&quot;&gt;40920&lt;span class=&quot;z-punctuation z-separator z-decimal z-json&quot;&gt;.&lt;&#x2F;span&gt;1099999999&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;stdDev&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-json&quot;&gt;40&lt;span class=&quot;z-punctuation z-separator z-decimal z-json&quot;&gt;.&lt;&#x2F;span&gt;87384345937876&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;approxPercentiles&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-json&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-json&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-json&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-json&quot;&gt;,&lt;&#x2F;span&gt;
	&lt;span class=&quot;z-invalid z-illegal z-expected-sequence-separator z-json&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-invalid z-illegal z-expected-sequence-separator z-json&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-invalid z-illegal z-expected-sequence-separator z-json&quot;&gt;.&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;suggestions.json&lt;&#x2F;code&gt; includes a list with some basic data quality rule suggestions based on the profiled metrics. Some suggestions are more useful than others. I have noticed that sometimes columns with medium cardinality are mistaken for categorical variables, suggesting value constraints. Having tight checks is valuable, but be wary of overfitting your tests.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; class=&quot;language-json z-code&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;constraint_suggestions&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-meta z-sequence z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-json&quot;&gt;[&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-json&quot;&gt;{&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-invalid z-illegal z-expected-mapping-key z-json&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-invalid z-illegal z-expected-mapping-key z-json&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-invalid z-illegal z-expected-mapping-key z-json&quot;&gt;.&lt;&#x2F;span&gt;
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;column_name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Invoice&#x2F;Item Number&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;current_value&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Completeness: 1.0&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;rule_description&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;If a column is complete in the sample, we suggest a NOT NULL constraint&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;code_for_constraint&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;.isComplete(&lt;span class=&quot;z-constant z-character z-escape z-json&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;Invoice&#x2F;Item Number&lt;span class=&quot;z-constant z-character z-escape z-json&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-json&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-json&quot;&gt;,&lt;&#x2F;span&gt;
	&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-json&quot;&gt;{&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-invalid z-illegal z-expected-mapping-key z-json&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-invalid z-illegal z-expected-mapping-key z-json&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-invalid z-illegal z-expected-mapping-key z-json&quot;&gt;.&lt;&#x2F;span&gt;
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;column_name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Volume Sold (Liters)&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;current_value&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Minimum: 0.05&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;rule_description&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;If we see only non-negative numbers in a column, we suggest a corresponding constraint&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;code_for_constraint&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;.isNonNegative(&lt;span class=&quot;z-constant z-character z-escape z-json&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;Volume Sold (Liters)&lt;span class=&quot;z-constant z-character z-escape z-json&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;)&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-json&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-json&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;adding-data-quality-checks&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#adding-data-quality-checks&quot; aria-label=&quot;Anchor link for: adding-data-quality-checks&quot;&gt;üîó&lt;&#x2F;a&gt;Adding Data Quality Checks&lt;&#x2F;h2&gt;
&lt;p&gt;Now we have identified expectations for our data, we will write the data quality checks to help us identify and address any issues or inconsistencies present in the dataset.&lt;&#x2F;p&gt;
&lt;p&gt;The checks are defined in groups with associated description and severity. Under the hood, the checks are translated to metric calculations and predicates that indicate success or failure based on the result of said metric.&lt;&#x2F;p&gt;
&lt;p&gt;The checks address different types of issues and may operate on both column and dataset level. See &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;awslabs&#x2F;deequ&#x2F;blob&#x2F;master&#x2F;src&#x2F;main&#x2F;scala&#x2F;com&#x2F;amazon&#x2F;deequ&#x2F;checks&#x2F;Check.scala&quot;&gt;this file&lt;&#x2F;a&gt; for an overview of all the supported checks. If you can&#x27;t find the right check, a custom check can be written in Spark SQL with the &lt;code&gt;satisfies()&lt;&#x2F;code&gt; method.&lt;&#x2F;p&gt;
&lt;p&gt;Here is an example set of data quality checks that are relevant to our business case.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;checks&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Seq&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Check&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;CheckLevel&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Sales base checks&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;hasSize&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-language z-underscore z-scala&quot;&gt;_&lt;&#x2F;span&gt; &amp;gt;= &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Dataset should not be empty&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;isComplete&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Invoice&#x2F;Item Number&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;isComplete&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Date&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;isComplete&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Store Name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;isComplete&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Zip Code&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;isComplete&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Vendor Name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;isComplete&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Item Number&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;isComplete&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Bottles Sold&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;isComplete&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Sale&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;isUnique&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Invoice&#x2F;Item Number&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;hasPattern&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Invoice&#x2F;Item Number&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;^INV-[0-9]{11}$&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;r&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;hasPattern&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Date&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;^[0-9]{4}-[0-9]{2}-[0-9]{2}$&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;r&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;hasPattern&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Zip Code&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;^[0-9]{5}$&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;r&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;isNonNegative&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;`Bottles Sold`&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;isNonNegative&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;`Sale`&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;isNonNegative&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;`Volume Sold (Liters)`&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The data quality, checks can be executed using the &lt;code&gt;VerificationSuite&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-storage z-type z-volatile z-scala&quot;&gt;var&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-scala&quot;&gt;verificationSuite&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;VerificationSuite&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;onData&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;validDf&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;useSparkSession&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;spark&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;overwritePreviousFiles&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-language z-scala&quot;&gt;true&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;saveCheckResultsJsonToPath&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-support z-function z-scala&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;${&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-scala z-embedded&quot;&gt;args&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;metrics_path&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;}&lt;&#x2F;span&gt;&#x2F;checks.json&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;addChecks&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;checks&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;

&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;verificationResult&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; verificationSuite&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;run&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;z-keyword z-control z-flow z-scala&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;verificationResult&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;status &lt;span class=&quot;z-keyword z-operator z-comparison z-scala&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;CheckStatus&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-scala&quot;&gt;{&lt;&#x2F;span&gt;  
	logger&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;error&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-support z-function z-scala&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Data quality checks failed. Results: &lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;${&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-scala z-embedded&quot;&gt;verificationResult&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;checkResults&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	sys&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;exit&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
&lt;span class=&quot;z-punctuation z-section z-block z-end z-scala&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Running the checks as is, will result in a failure. The generated report (e.g., &lt;code&gt;checks.json&lt;&#x2F;code&gt;) generally provides enough information to determine which check fail and why. By examining the report, we see the following error, implying that ~1.1% of our zip codes don&#x27;t follow the five-digit format.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; class=&quot;language-json z-code&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;z-source z-json&quot;&gt;...
&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-json&quot;&gt;{&lt;&#x2F;span&gt;  
	&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;check_status&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Error&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
	&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;check_level&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Error&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
	&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;constraint_status&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Failure&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
	&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;check&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Validity checks&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
	&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;constraint_message&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Value: 0.9898740429735737 does not meet the constraint requirement!&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;  
	&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;constraint&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;PatternMatchConstraint(Zip Code, ^[0-9]{5}$)&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-json&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;,
...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This is in fact correct, as the zip code column in the dataset may contain some straggling characters. This can be fixed by either reducing the check sensitivity or addressing the issues before the checks are run:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;validDf&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; schemaResult&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;validRows  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;withColumn&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Zip Code&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;regexp_extract&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;col&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Zip Code&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;[0-9]{5}&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;collecting-data-quality-metrics&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#collecting-data-quality-metrics&quot; aria-label=&quot;Anchor link for: collecting-data-quality-metrics&quot;&gt;üîó&lt;&#x2F;a&gt;Collecting Data Quality Metrics&lt;&#x2F;h2&gt;
&lt;p&gt;Metrics provide valuable insights into the health and quality of our data. They can help us see trends, make improvements, and find anomalies in our data. Some metrics are necessary for configured checks and are computed automatically, while others may be needed for external systems such as monitoring dashboards or data catalogs and need to be specified manually.&lt;&#x2F;p&gt;
&lt;p&gt;These additional metrics, need to be added manually as &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;awslabs&#x2F;deequ&#x2F;tree&#x2F;master&#x2F;src&#x2F;main&#x2F;scala&#x2F;com&#x2F;amazon&#x2F;deequ&#x2F;analyzers&quot;&gt;analyzers&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-access z-scala&quot;&gt;private&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-function z-scala&quot;&gt;def&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-scala&quot;&gt;numericMetrics&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-scala&quot;&gt;column&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-ascription z-scala&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-scala&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-ascription z-scala&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-scala&quot;&gt;Seq&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-scala&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-scala&quot;&gt;Analyzer&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-scala&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-language z-underscore z-scala&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-scala&quot;&gt;Metric&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-scala&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-language z-underscore z-scala&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-scala&quot;&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-scala&quot;&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-scala&quot;&gt;]&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-scala&quot;&gt;{&lt;&#x2F;span&gt;
	&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Seq&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Minimum&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;column&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Maximum&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;column&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Mean&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;column&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;StandardDeviation&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;column&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;ApproxQuantile&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;column&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-decimal z-scala&quot;&gt;0&lt;span class=&quot;z-punctuation z-separator z-decimal z-scala&quot;&gt;.&lt;&#x2F;span&gt;5&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-scala&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
  
&lt;span class=&quot;z-storage z-modifier z-access z-scala&quot;&gt;private&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-function z-scala&quot;&gt;def&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-scala&quot;&gt;categoricalMetrics&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-scala&quot;&gt;column&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-ascription z-scala&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-scala&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-ascription z-scala&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-scala&quot;&gt;Seq&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-scala&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-scala&quot;&gt;Analyzer&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-scala&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-language z-underscore z-scala&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-scala&quot;&gt;Metric&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-scala&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-language z-underscore z-scala&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-scala&quot;&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-scala&quot;&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-scala&quot;&gt;]&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-scala&quot;&gt;{&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Seq&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;CountDistinct&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;column&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
&lt;span class=&quot;z-punctuation z-section z-block z-end z-scala&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Below, we create analyzers to generically compute the distribution of numeric columns.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;analysers&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;  
	numericMetrics&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Bottles Sold&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	++ numericMetrics&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Sale&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	++ numericMetrics&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Volume Sold (Liters)&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	++ categoricalMetrics&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Store Name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	++ categoricalMetrics&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Vendor Name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	++ &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Seq&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Completeness&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Bottles Sold&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Similar to quality checks, the metrics are computed using the &lt;code&gt;VerificationSuite.run()&lt;&#x2F;code&gt; method:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-storage z-type z-volatile z-scala&quot;&gt;var&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-scala&quot;&gt;verificationSuite&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;VerificationSuite&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt; 
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;saveSuccessMetricsJsonToPath&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-support z-function z-scala&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;${&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-scala z-embedded&quot;&gt;args&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;metrics_path&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;}&lt;&#x2F;span&gt;&#x2F;metrics.json&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;addRequiredAnalyzers&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;analysers&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The collected metrics are written to &lt;code&gt;metrics.json&lt;&#x2F;code&gt; file, which can be loaded by external tools. Alternatively, Deequ defines a concept of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;awslabs&#x2F;deequ&#x2F;blob&#x2F;master&#x2F;src&#x2F;main&#x2F;scala&#x2F;com&#x2F;amazon&#x2F;deequ&#x2F;examples&#x2F;metrics_repository_example.md&quot;&gt;metric repositories&lt;&#x2F;a&gt; as an interface for saving the metrics to other systems in a generic manner. You can write your own repository to store the metrics in, for example, Prometheus or AWS Cloud Watch.&lt;&#x2F;p&gt;
&lt;p&gt;Another useful feature is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;awslabs&#x2F;deequ&#x2F;blob&#x2F;master&#x2F;src&#x2F;main&#x2F;scala&#x2F;com&#x2F;amazon&#x2F;deequ&#x2F;examples&#x2F;KLLExample.scala&quot;&gt;KLL Sketches&lt;&#x2F;a&gt; which supports, approximate, but highly accurate metric calculation on data by sampling.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;incremental-computation-of-metrics&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#incremental-computation-of-metrics&quot; aria-label=&quot;Anchor link for: incremental-computation-of-metrics&quot;&gt;üîó&lt;&#x2F;a&gt;Incremental Computation of Metrics&lt;&#x2F;h3&gt;
&lt;p&gt;In the realm of ETL workloads, it is rare for data engineers to reprocess the entire dataset. Typically, pipelines are designed to be incremental, processing only new data. However, if your data quality checks rely on metrics computed over the entire dataset, this can lead to a continuous increase in load on your Spark cluster.&lt;&#x2F;p&gt;



&lt;figure class=&quot;image-captions-figure&quot;&gt;
  &lt;img
    alt=&quot;Anomaly Detection on Row Count quality metric in Soda Cloud&quot;
    width=&quot;500&quot;
    height=&quot;250&quot;
    src=&quot;https:&amp;#x2F;&amp;#x2F;egordmitriev.dev&amp;#x2F;processed_images&amp;#x2F;deequ_aggregated_states.5be2b005e66b8feb.png&quot;
  &gt;
  &lt;figcaption class=&quot;image-captions-caption&quot;&gt;&lt;p&gt;Instead of repeatedly running the batch computation on growing input data D, incremental computation is supported hat only needs (t) to consume the latest dataset delta ‚àÜD and a state S of the computation. Source: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.vldb.org&#x2F;pvldb&#x2F;vol11&#x2F;p1781-schelter.pdf&quot;&gt;technical paper&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;To address this challenge, Deequ introduces a concept of ‚ÄúAlgebraic states.‚Äù These states store calculated metrics and the corresponding data, enabling their aggregation across multiple pipeline runs. Consequently, only the incremental data needs to be processed, significantly reducing the computational burden.&lt;&#x2F;p&gt;
&lt;p&gt;We demonstrate this by adding complete dataset checks within our incremental ETL script. The first step is to record incremental metrics in a temporary in-memory state provider:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;incrementalStateProvider&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;InMemoryStateProvider&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;

&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;verificationResult&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;VerificationSuite&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;saveStatesWith&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;incrementalStateProvider&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To load the aggregated state from a persistent provider, a persistent state provider is needed. Additionally, we check if the state already exists to determine whether it should be included in the aggregation, specifically necessary for first pipeline run:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-scala&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Initialize state for incremental metric computation  &lt;&#x2F;span&gt;
&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;completeStatePath&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-support z-function z-scala&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;${&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-scala z-embedded&quot;&gt;args&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;metrics_path&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;}&lt;&#x2F;span&gt;&#x2F;state_repository&#x2F;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;completeStateProvider&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;HdfsStateProvider&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;spark&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-support z-function z-scala&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;${&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-scala z-embedded&quot;&gt;completeStatePath&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;}&lt;&#x2F;span&gt;&#x2F;state.json&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; allowOverwrite &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-scala&quot;&gt;true&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;

&lt;span class=&quot;z-comment z-line z-double-slash z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-scala&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Determine if the complete state already exists&lt;&#x2F;span&gt;
&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;fs&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;FileSystem&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;get&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;spark&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;sparkContext&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;hadoopConfiguration&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;aggregateStates&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-exception z-scala&quot;&gt;try&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-scala&quot;&gt;{&lt;&#x2F;span&gt;  
	fs&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;listFiles&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-other z-scala&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-scala&quot;&gt;Path&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;completeStatePath&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-scala&quot;&gt;false&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;hasNext  
&lt;span class=&quot;z-punctuation z-section z-block z-end z-scala&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-exception z-scala&quot;&gt;catch&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-scala&quot;&gt;{&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-keyword z-other z-declaration z-scala&quot;&gt;case&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-pattern z-scala&quot;&gt; &lt;span class=&quot;z-variable z-language z-underscore z-scala&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-ascription z-scala&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-scala&quot;&gt;FileNotFoundException&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-function z-arrow z-case z-scala&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-case z-first z-scala&quot;&gt; &lt;span class=&quot;z-constant z-language z-scala&quot;&gt;false&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-scala&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now, once again, we can run &lt;code&gt;VerificationSuite&lt;&#x2F;code&gt;, but this time we use the providers to load state data. Consequently, the checks and metrics are computed and merged over the aggregated state, which, in this case, represents the complete dataset:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-scala&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Merge incremental metrics with complete metrics, and run data quality checks  &lt;&#x2F;span&gt;
&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;completeChecks&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Seq&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Check&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;CheckLevel&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Sales complete checks&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;hasSize&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-language z-underscore z-scala&quot;&gt;_&lt;&#x2F;span&gt; &amp;gt;= &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Dataset should not be empty&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;

logger&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;info&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Running complete dataset checks&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;completeVerificationResult&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;VerificationSuite&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;runOnAggregatedStates&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;  
	validDf&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;schema&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;  
	completeChecks&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-keyword z-control z-flow z-scala&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;aggregateStates&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Seq&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;completeStateProvider&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; incrementalStateProvider&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-keyword z-control z-flow z-scala&quot;&gt;else&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Seq&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;incrementalStateProvider&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;  
	saveStatesWith &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;completeStateProvider&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;z-keyword z-control z-flow z-scala&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;completeVerificationResult&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;status &lt;span class=&quot;z-keyword z-operator z-comparison z-scala&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;CheckStatus&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-scala&quot;&gt;{&lt;&#x2F;span&gt;  
	logger&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;error&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-support z-function z-scala&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Complete data quality checks failed. Results: &lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;${&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-scala z-embedded&quot;&gt;completeVerificationResult&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;checkResults&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	sys&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;exit&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-scala&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
&lt;span class=&quot;z-punctuation z-section z-block z-end z-scala&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This feature provides granular control over metric computation and therefore supports a multitude of implementations. For instance, you may choose to save the state &lt;em&gt;only&lt;&#x2F;em&gt; when the entire pipeline succeeds, or you may want to perform anomaly detection on the complete dataset.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gracefully-handling-data-changes&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#gracefully-handling-data-changes&quot; aria-label=&quot;Anchor link for: gracefully-handling-data-changes&quot;&gt;üîó&lt;&#x2F;a&gt;Gracefully Handling Data Changes&lt;&#x2F;h2&gt;
&lt;p&gt;When working with external data sources, it&#x27;s common for changes to occur, which can lead to failed checks if not properly handled. To ensure backward compatibility and smooth data processing, there are two options you can consider:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Filterable Constraint Checks&lt;&#x2F;strong&gt;: these are conditional checks that are only executed if a specific condition is satisfied, such as when the input data is from an older dataset version. This allows you to accommodate changes in the data structure while still maintaining compatibility.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;checks&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Seq&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Check&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;CheckLevel&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Sales base checks&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;
	&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Check&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;CheckLevel&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Legacy checks&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;hasPattern&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Date&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;^[0-9]{2}&#x2F;[0-9]{2}&#x2F;[0-9]{4}$&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;r&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
		&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;where&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;year &amp;lt; 2022&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;Splitting by Data Version&lt;&#x2F;strong&gt;: Unfortunately, conditional checks are not applicable for schema checks. Cases such as column addition or deletion need to be addressed separately. In such cases, it&#x27;s recommended to keep your data versions close at hand and use them as a discriminator to run various checks for different versions. Splitting by version enables you to have granular control over the checks while still keeping the code reusability.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;anomaly-detection&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#anomaly-detection&quot; aria-label=&quot;Anchor link for: anomaly-detection&quot;&gt;üîó&lt;&#x2F;a&gt;Anomaly Detection&lt;&#x2F;h2&gt;
&lt;p&gt;Anomaly detection is a crucial aspect of data quality testing that helps identify unexpected or unusual patterns in the data based on historical observations. Deequ provides several anomaly detection &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;awslabs&#x2F;deequ&#x2F;tree&#x2F;master&#x2F;src&#x2F;main&#x2F;scala&#x2F;com&#x2F;amazon&#x2F;deequ&#x2F;anomalydetection&quot;&gt;strategies&lt;&#x2F;a&gt; that can be applied to different aspects of the data.&lt;&#x2F;p&gt;
&lt;p&gt;Before applying anomaly detection, it is important to store the metrics in a persistent repository. This ensures that historical metrics are available for comparison and trend analysis. In the code snippet below, we use a &lt;code&gt;FileSystemMetricsRepository&lt;&#x2F;code&gt; to store the metrics in a file system location:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-storage z-type z-stable z-scala&quot;&gt;val&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-scala&quot;&gt;metricsRepository&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-ascription z-scala&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-scala&quot;&gt;MetricsRepository&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;FileSystemMetricsRepository&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;spark&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-support z-function z-scala&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;${&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-scala z-embedded&quot;&gt;args&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;metrics_path&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-interpolated z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-expression z-scala&quot;&gt;}&lt;&#x2F;span&gt;&#x2F;metrics_repository.json&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;

&lt;span class=&quot;z-storage z-type z-volatile z-scala&quot;&gt;var&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-scala&quot;&gt;verificationSuite&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;VerificationSuite&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt; 
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;useRepository&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;metricsRepository&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Once at least one data point is collected and stored in the metrics repository, we can apply anomaly detection strategies.&lt;&#x2F;p&gt;
&lt;p&gt;One useful application of anomaly detection is keeping the data volume in check. If your dataset is expected to grow at a predictable pace or remain stationary, you can add anomaly detection on the row count. This helps identify unexpected changes introduced by external systems or transformation scripts.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;scala&quot; class=&quot;language-scala z-code&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;z-source z-scala&quot;&gt;&lt;span class=&quot;z-storage z-type z-volatile z-scala&quot;&gt;var&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-scala&quot;&gt;verificationSuite&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;VerificationSuite&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;  
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt; 
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;addAnomalyCheck&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;RelativeRateOfChangeStrategy&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;maxRateIncrease &lt;span class=&quot;z-keyword z-operator z-assignment z-scala&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-decimal z-scala&quot;&gt;2&lt;span class=&quot;z-punctuation z-separator z-decimal z-scala&quot;&gt;.&lt;&#x2F;span&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Size&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;AnomalyCheckConfig&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-scala&quot;&gt;(&lt;&#x2F;span&gt;
	        &lt;span class=&quot;z-support z-constant z-scala&quot;&gt;CheckLevel&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-constant z-scala&quot;&gt;Warning&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-scala&quot;&gt;,&lt;&#x2F;span&gt;
	        &lt;span class=&quot;z-string z-quoted z-double z-scala&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Dataset doubling or halving is anomalous&lt;span class=&quot;z-punctuation z-definition z-string z-end z-scala&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-group z-end z-scala&quot;&gt;)&lt;&#x2F;span&gt;
	&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-scala&quot;&gt;.&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Similarly, anomaly detection can be applied to specific columns where you have knowledge about the expected distribution or behavior of the data.&lt;&#x2F;p&gt;
&lt;p&gt;When an anomaly is found, you have the option to handle it based on the severity of the issue. If the anomaly is critical, you can stop the pipeline to avoid propagating the issue further, or if the anomaly is not severe, you can emit a warning to your monitoring systems for further investigation.&lt;&#x2F;p&gt;
&lt;p&gt;By incorporating anomaly detection into your data quality checks, you can proactively identify and address unexpected or unusual patterns in your data, ensuring the overall quality and reliability of your data pipelines.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;üîó&lt;&#x2F;a&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;In this blog, we have set up a data quality checking solution for our Spark ETL pipeline by incorporating the open-source library Deequ. We have covered how one can use Deequ for schema checking, data profiling, quality constraints testing, quality metric collection, and anomaly detection.&lt;&#x2F;p&gt;
&lt;p&gt;If you prefer writing scripts in Python (i.e., PySpark), then &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;awslabs&#x2F;python-deequ&quot;&gt;PyDeequ&lt;&#x2F;a&gt; may be of help, which is a Python library for Deequ. At the time of writing this blog, this library is a bit behind and doesn&#x27;t yet support some features we have discussed.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the previous blog ‚Äú&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.luminis.eu&#x2F;blog&#x2F;introduction-to-data-quality&#x2F;&quot;&gt;Introduction to Data Quality&lt;&#x2F;a&gt;‚Äù if you haven&#x27;t yet, which may give you ideas on how to implement your data quality checks.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;more-resources&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#more-resources&quot; aria-label=&quot;Anchor link for: more-resources&quot;&gt;üîó&lt;&#x2F;a&gt;More Resources&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;aws.amazon.com&#x2F;blogs&#x2F;big-data&#x2F;test-data-quality-at-scale-with-deequ&#x2F;&quot;&gt;Test data quality at scale with Deequ | AWS Big Data Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;aws.amazon.com&#x2F;blogs&#x2F;big-data&#x2F;building-a-serverless-data-quality-and-analysis-framework-with-deequ-and-aws-glue&#x2F;&quot;&gt;Building a serverless data quality and analysis framework with Deequ and AWS Glue | AWS Big Data Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.vldb.org&#x2F;pvldb&#x2F;vol11&#x2F;p1781-schelter.pdf&quot;&gt;Automating Large-Scale Data Quality Verification - Original Deequ Technical Paper&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;AWS is currently building an integrated solution for data quality checking in AWS Glue. It still lacks many features of Deequ, but it is worth keeping an eye on this one as it is in active development.
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;aws.amazon.com&#x2F;glue&#x2F;features&#x2F;data-quality&#x2F;&quot;&gt;Data Quality ‚Äì AWS Glue Data Quality‚Äì Amazon Web Services&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;See more examples on &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;awslabs&#x2F;deequ&quot;&gt;Deequ GitHub page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Introduction to Data Quality</title>
        <published>2023-05-12T00:00:00+00:00</published>
        <updated>2023-05-12T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://egordmitriev.dev/blog/introduction-to-dataquality/" type="text/html"/>
        <id>https://egordmitriev.dev/blog/introduction-to-dataquality/</id>
        
        <content type="html">&lt;small&gt;
Originaly published as part of &lt;a href=&quot;https:&#x2F;&#x2F;www.luminis.eu&#x2F;blog&#x2F;introduction-to-data-quality&#x2F;&quot; target=&quot;_blank&quot;&gt;Luminis Data Blog&lt;&#x2F;a&gt;.
&lt;&#x2F;small&gt;
&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#introduction&quot; aria-label=&quot;Anchor link for: introduction&quot;&gt;üîó&lt;&#x2F;a&gt;Introduction&lt;&#x2F;h2&gt;
&lt;p&gt;We&#x27;ve all heard the phrase ‚Äúgarbage in, garbage out‚Äù which highlights the importance of quality data for data-driven systems. Here, quality data can be interpreted in two ways: firstly as clean and well-standardized data that meets expectations, and secondly, as well-thought-out data that fits a particular business case. Although the latter is typically determined during the research or data strategy phase, in this blog we will focus on the former interpretation.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;motivation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#motivation&quot; aria-label=&quot;Anchor link for: motivation&quot;&gt;üîó&lt;&#x2F;a&gt;Motivation&lt;&#x2F;h2&gt;
&lt;p&gt;Maintaining high-quality data is critical for accurate data analysis, decision-making, and achieving business objectives. Real-world data is often noisy and subject to constant changes, which makes maintaining data quality a challenging task. Therefore, it&#x27;s crucial to identify data quality issues early on and address them before they have any effects on downstream analytics tasks or decision-making processes. One of the responsibilities of Data and MLOps Engineers is to ensure that quality is maintained throughout its lifecycle.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;measuring-data-quality&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#measuring-data-quality&quot; aria-label=&quot;Anchor link for: measuring-data-quality&quot;&gt;üîó&lt;&#x2F;a&gt;Measuring Data Quality&lt;&#x2F;h2&gt;
&lt;p&gt;To ensure data quality throughout the data pipeline, it&#x27;s important to measure and test it at different stages. A typical testing workflow in data engineering would involve several types of tests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Unit testing&lt;&#x2F;strong&gt;: focuses on testing separate components of your pipeline in isolation. For example, testing whether (a part of) an SQL or a Spark script does what it is supposed to do.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Functional Testing&lt;&#x2F;strong&gt;: includes data flow validation such as transformation logic validation based on business rules, as well as data integrity, which validates data based on constraints and schema checks. This type of testing occurs frequently at different stages of the pipeline (think ingestion, processing, and storage).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Integration Testing&lt;&#x2F;strong&gt;: ensures that the data pipeline meets the business requirements. Generally, this is done by running fake data through the pipeline and validating the result.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Although we have covered different types of tests, it&#x27;s worth noting that traditional software engineering practices only cover these points to a certain extent. For this reason, let&#x27;s focus on functional testing of data and take a look at testable properties attributed to quality data.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Completeness&lt;&#x2F;strong&gt;: checks whether all expected data is present and accounted for in the data pipeline. Simple checks may test for null values, while more complex checks may also condition based on value or other columns.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Uniqueness&lt;&#x2F;strong&gt;: verifies if there are no duplicate records in the data pipeline. Duplicate records can cause issues with aggregation and analysis, leading to incorrect results.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Distribution&lt;&#x2F;strong&gt;: focuses on closely examining the validity of column values. This may involve checks to ensure that the data falls within an accepted range or that the units used in a given column are consistent.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Validity&lt;&#x2F;strong&gt;: enforces known invariants that should always hold true, regardless of the input data. These may be defined based on data standards or business rules. For example, the price column may never be negative, or the total column should equal to the sum of pre-tax subtotal and tax amount.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Accuracy&lt;&#x2F;strong&gt;: measures the level to which data reflects the real world by using a verifiable source. For example, a customer phone number can be validated.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Integrity&lt;&#x2F;strong&gt;: takes into account relationships of data with other systems within an organization. It involves limiting changes or additions to the data that may break connections and generate orphaned records.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Consistency&lt;&#x2F;strong&gt;: ensures that the data is accurate, and aligned with the organization&#x27;s attributes. By having consistent attribute values on can building relationships between different data systems, prevent data duplication, and inconsistencies.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;data-observability&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#data-observability&quot; aria-label=&quot;Anchor link for: data-observability&quot;&gt;üîó&lt;&#x2F;a&gt;Data Observability&lt;&#x2F;h2&gt;
&lt;p&gt;Having proper testing mechanisms set up is only the first step, as it is only natural that the data keeps evolving and may change unexpectedly. This aspect of data is not easy to tame, since you don&#x27;t always have control over the source systems. That&#x27;s why it&#x27;s crucial to continuously test and monitor data quality, which is where &lt;strong&gt;Data Observability&lt;&#x2F;strong&gt; comes into play.&lt;&#x2F;p&gt;
&lt;p&gt;The five pillars of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.montecarlodata.com&#x2F;blog-what-is-data-observability&#x2F;&quot;&gt;data observability&lt;&#x2F;a&gt; provide good guidance criteria you would want to include in your testing and monitoring.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Freshness&lt;&#x2F;strong&gt;: Does the asset use the most recent data? This is a critical aspect of data quality, as outdated or stale data can lead to incorrect decisions being made. Depending on the use case, you may need to validate that the data is fresh within a certain time window, such as the past hour or day.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Quality&lt;&#x2F;strong&gt;: The quality checks are vital in verifying the quality of data, as they ensure that the data is in the correct format and within acceptable limits. These checks are useful for ensuring that the transformation pipeline can handle the input data, as well as, validating the output data, as is commonly applied when &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paypal&#x2F;data-contract-template&quot;&gt;writing data contracts&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Volume&lt;&#x2F;strong&gt;: Did all the data arrive? How many rows were changed? Did the dataset decrease in size? These are important questions to answer when monitoring the volume of your data pipeline. Sudden spikes or drops in volume could indicate issues with the pipeline or changes in the underlying data sources.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Schema&lt;&#x2F;strong&gt;: The schema of a dataset defines the structure and type of each field in the data. It is often used in contracts between producers and consumers of the data. Especially when working with raw data sources, schema validation checks can help catch issues such as missing or incorrectly formatted fields, and ensure that any changes to the schema are properly communicated to downstream consumers.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Lineage&lt;&#x2F;strong&gt;: Lineage refers to the record of the origins, movement, and transformation of data throughout the data pipeline. It can answer questions about upstream sources that the data depends on and downstream assets that would be impacted by any change. The data lineage is a critical component during compliance auditing and root cause analysis.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;



&lt;figure class=&quot;image-captions-figure&quot;&gt;
  &lt;img
    alt=&quot;Anomaly Detection on Row Count quality metric in Soda Cloud&quot;
    width=&quot;350&quot;
    height=&quot;361&quot;
    src=&quot;https:&amp;#x2F;&amp;#x2F;egordmitriev.dev&amp;#x2F;processed_images&amp;#x2F;data_lineage.5f142e90278ef3df.png&quot;
  &gt;
  &lt;figcaption class=&quot;image-captions-caption&quot;&gt;&lt;p&gt;Lineage of Continent Statistics table visualized in Dagster&lt;&#x2F;p&gt;
&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;You can not test for everything, and as things inevitably break, you may be unknowingly making decisions on bad data. There is an exponential relation between lost revenue and how far down the line data issues are diagnosed.&lt;&#x2F;p&gt;
&lt;p&gt;When you write tests for your data, you are testing for ‚Äú&lt;strong&gt;known unknowns&lt;&#x2F;strong&gt;‚Äù. The next step you can take is testing for ‚Äú&lt;strong&gt;unknown unknowns&lt;&#x2F;strong&gt;‚Äù, which on contrary are not apparent during the creation of the data systems. Detecting these issues is typically done through &lt;strong&gt;health checks&lt;&#x2F;strong&gt; and &lt;strong&gt;anomaly detection&lt;&#x2F;strong&gt; on collected metrics through simple thresholding or forecasting-based methods.&lt;&#x2F;p&gt;
&lt;p&gt;Monitoring the percentage of faulty rows or checking whether the number of days since the last update does not exceed the historical average duration are good examples of proxy measures that can detect ‚Äúunknown unknowns‚Äù.&lt;&#x2F;p&gt;



&lt;figure class=&quot;image-captions-figure&quot;&gt;
  &lt;img
    alt=&quot;Anomaly Detection on Row Count quality metric in Soda Cloud&quot;
    width=&quot;600&quot;
    height=&quot;342&quot;
    src=&quot;https:&amp;#x2F;&amp;#x2F;egordmitriev.dev&amp;#x2F;processed_images&amp;#x2F;anomaly_detection.bfe5ae581ee9ac3f.png&quot;
  &gt;
  &lt;figcaption class=&quot;image-captions-caption&quot;&gt;&lt;p&gt;Anomaly Detection on Row Count quality metric in &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.soda.io&#x2F;resources&#x2F;time-series-anomaly-detection-with-soda&quot;&gt;Soda Cloud&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;Performing &lt;strong&gt;data profiling&lt;&#x2F;strong&gt; by defining rule-based sets of metrics to be computed on all columns within your dataset can give you a good starting point when writing tests. Some data processing tools like &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;openrefine.org&#x2F;&quot;&gt;OpenRefine&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;aws.amazon.com&#x2F;glue&#x2F;features&#x2F;databrew&#x2F;&quot;&gt;AWS DataBrew&lt;&#x2F;a&gt; have built-in data profiling to aid in building cleaning transformations. Similarly, it can also be a powerful tool when combined with anomaly detection for building automated monitoring systems.&lt;&#x2F;p&gt;



&lt;figure class=&quot;image-captions-figure&quot;&gt;
  &lt;img
    alt=&quot;Anomaly Detection on Row Count quality metric in Soda Cloud&quot;
    width=&quot;1000&quot;
    height=&quot;543&quot;
    src=&quot;https:&amp;#x2F;&amp;#x2F;egordmitriev.dev&amp;#x2F;processed_images&amp;#x2F;data_profiles.ef523c009981f8c0.png&quot;
  &gt;
  &lt;figcaption class=&quot;image-captions-caption&quot;&gt;&lt;p&gt;Data Profiles in &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.datanami.com&#x2F;2020&#x2F;11&#x2F;12&#x2F;aws-launches-visual-data-prep-tool&#x2F;&quot;&gt;AWS DataBrew&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;Presenting the data profiles, quality information, and schema as part of a dashboard or data catalog can provide a lot of value for your business. Similarly, setting the right governance structure where the issues and alerts reach the appropriate team is an important aspect of maintaining high data reliability.&lt;&#x2F;p&gt;
&lt;p&gt;For additional guidelines on improving data reliability, consider reviewing &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.aws.amazon.com&#x2F;wellarchitected&#x2F;latest&#x2F;analytics-lens&quot;&gt;AWS Well-Architected Data Analytics Lens&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;



&lt;figure class=&quot;image-captions-figure&quot;&gt;
  &lt;img
    alt=&quot;Anomaly Detection on Row Count quality metric in Soda Cloud&quot;
    width=&quot;600&quot;
    height=&quot;369&quot;
    src=&quot;https:&amp;#x2F;&amp;#x2F;egordmitriev.dev&amp;#x2F;processed_images&amp;#x2F;data_quality_scorecards.482167c050ea8c60.png&quot;
  &gt;
  &lt;figcaption class=&quot;image-captions-caption&quot;&gt;&lt;p&gt;Data Quality Score Cards in &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.montecarlodata.com&#x2F;blog-announcing-monte-carlos-data-reliability-dashboard-a-better-way-understand-the-health-of-your-data&#x2F;&quot;&gt;Monte Carlo&#x27;s Data Reliability Dashboard&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;&lt;h2 id=&quot;data-testing-patterns&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#data-testing-patterns&quot; aria-label=&quot;Anchor link for: data-testing-patterns&quot;&gt;üîó&lt;&#x2F;a&gt;Data Testing Patterns&lt;&#x2F;h2&gt;
&lt;p&gt;When it comes to designing reliable data systems, it&#x27;s essential to handle errors gracefully both during data quality testing and transformation. Depending on your environment, there are various testing approaches you can take. A common first concern is determining when and where to run data quality checks.&lt;&#x2F;p&gt;
&lt;p&gt;Many cases such as ETL pipelines prefer &lt;strong&gt;on-demand execution&lt;&#x2F;strong&gt; where the quality of raw data is evaluated at the source or the destination after loading the data. This approach ensures that the transformation step can handle the data before actual processing is applied. Both approaches have their benefits; testing before load requires query access to the source database and may put excessive load on the application database, while loading data beforehand may result in additional latency.&lt;&#x2F;p&gt;
&lt;p&gt;Similarly, &lt;strong&gt;scheduled execution&lt;&#x2F;strong&gt; periodically tests data quality in source tables and reports if any issues arise. This approach is typically found in data warehouse solutions, where transformation is postponed until query evaluation using views.&lt;&#x2F;p&gt;
&lt;p&gt;A notable benefit of on-demand execution is that one can immediately act on it. As such, the &lt;strong&gt;circuit breaker&lt;&#x2F;strong&gt; pattern is utilized to break off pipeline execution if (batch) data does not pass the error checks or an anomaly is detected. The trade-off is that the rest of the system keeps using stale or partial data until the issue is resolved.&lt;&#x2F;p&gt;
&lt;p&gt;To expand on this methodology, &lt;strong&gt;data quarantining&lt;&#x2F;strong&gt; is another related pattern that defines a flow where faulty data is set aside. The quarantined data can be used to fix the issues and reprocessed at a later date to ensure that no data loss occurs. This approach works particularly well for incremental processing pipelines or pipelines without &lt;strong&gt;idempotency&lt;&#x2F;strong&gt; property (i.e., processing data multiple times results in a different dataset).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Self-healing&lt;&#x2F;strong&gt; pipelines combine none or multiple of the mentioned properties to gracefully recover from failure. This may be as simple as retrying data submission, reprocessing the full dataset, or waiting until prerequisite data is in the system.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;choosing-your-tools&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#choosing-your-tools&quot; aria-label=&quot;Anchor link for: choosing-your-tools&quot;&gt;üîó&lt;&#x2F;a&gt;Choosing Your Tools&lt;&#x2F;h2&gt;
&lt;p&gt;We evaluated several open-source data quality tools (aside from AWS Glue) to use in our ETL pipelines. Our evaluation criteria included features, integrations, and compatibility with our existing pipeline architecture.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Great Expectations&lt;&#x2F;strong&gt; (GX): is the tool of choice for many data workloads. It has a large collection of community-made checks and a large collection of features. Supported integrations include some &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;greatexpectations.io&#x2F;integrations&quot;&gt;common data tools&lt;&#x2F;a&gt;, cloud analytics (including Amazon Athena, AWS Glue, and AWS Redshift), and pandas dataframes.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Codified data contracts and data docs generation&lt;&#x2F;li&gt;
&lt;li&gt;Data profiling&lt;&#x2F;li&gt;
&lt;li&gt;The Quality metrics are limited to what checks calculate.&lt;&#x2F;li&gt;
&lt;li&gt;On-demand execution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;AWS Deequ&lt;&#x2F;strong&gt;: is an open-source library built by AWS that covers a wide range of data quality needs. Deequ is based on the concept of data quarantining and has the functionality to filter out and store bad data at various stages of the process.&lt;&#x2F;p&gt;
&lt;p&gt;The tool is built in Scala on top of Apache Spark, but it has a Python bindings library which unfortunately lags quite far behind. If you don&#x27;t use these tools in your stack, you will find them of limited use.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Anomaly detection&lt;&#x2F;li&gt;
&lt;li&gt;Schema checks&lt;&#x2F;li&gt;
&lt;li&gt;Data profiling&lt;&#x2F;li&gt;
&lt;li&gt;Quality metrics calculation and merging&lt;&#x2F;li&gt;
&lt;li&gt;On-demand execution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;AWS Glue Data Quality Rules&lt;&#x2F;strong&gt;: Recently, AWS introduced a variety of data quality tools as part of their serverless computing platform Glue. The tool itself uses Deequ under the hood and provides excellent interoperability with the rest of AWS stack, such as AWS CloudWatch and result storage.&lt;&#x2F;p&gt;
&lt;p&gt;As of writing this article, the functionality is still in public beta, does not offer a way to store quality metric results for anomaly detection nor has a way to run the checks outside AWS glue environment (closed source). Similarly, many of the features included in deequ are not yet supported, such as quality metrics calculation or custom checks.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Configuration-based tests&lt;&#x2F;li&gt;
&lt;li&gt;Well integrated with AWS infrastructure&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Soda Core&lt;&#x2F;strong&gt;: is a modern SQL-first data quality and observability tool. Similar to GX it includes a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.soda.io&#x2F;integrations#data-sources&quot;&gt;wide range of integrations&lt;&#x2F;a&gt;. While Soda Core by itself is only for collecting metrics, a full-fledged data observability platform in form of Soda Cloud (proprietary) is provided with automatic monitoring of data quality results, data contracts, and anomaly detection.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Wide range of integrations&lt;&#x2F;li&gt;
&lt;li&gt;Simple configuration&lt;&#x2F;li&gt;
&lt;li&gt;Schema checks&lt;&#x2F;li&gt;
&lt;li&gt;Quality measure calculation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;DBT Unit Tests&lt;&#x2F;strong&gt;: comes as part of the DBT which is an SQL-first tool for managing and modeling your data in data warehouses. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.getdbt.com&#x2F;product&#x2F;integrations&#x2F;&quot;&gt;The integrations&lt;&#x2F;a&gt; are not limited to data sources, but also other data quality tools. The tool itself is meant for unit testing and therefore runs separately from the data flow.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Custom metric calculation.&lt;&#x2F;li&gt;
&lt;li&gt;Community support (resources, plugins, and integrations).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Apache Griffin&lt;&#x2F;strong&gt;: As a complete data quality platform, it provides an integrated dashboard for data quality analysis, and monitoring data quality over time. The quality testing runs are conducted within the tool but separate from the data flow. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apache&#x2F;griffin&#x2F;blob&#x2F;master&#x2F;griffin-doc&#x2F;measure&#x2F;measure-configuration-guide.md&quot;&gt;The integrations&lt;&#x2F;a&gt; are limited to the Apache Stack (Kafka, Spark, Hive), and a select few other tools.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Streaming data processing support&lt;&#x2F;li&gt;
&lt;li&gt;Dashboard for data quality analysis&lt;&#x2F;li&gt;
&lt;li&gt;Anomaly detection&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All listed tools have their use cases and as such there is no clear winner. For simple ETL workloads, you might want to try Deequ. In a data warehouse setting, dbt in combination with Soda or GX might prove useful. When working in a data science setting or with streaming data, GX and Apache Griffin respectively might be good choices. If your infrastructure runs on AWS, it&#x27;s worth keeping an eye on developments in their Glue-based data quality tools.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;üîó&lt;&#x2F;a&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;In conclusion, maintaining high-quality data is essential for accurate data analysis, decision-making, and achieving business objectives. Data quality testing is a huge part of the testing process for data systems, and there are many options on how this can be implemented. In this blog, we have covered a few fundamentals, which I hope give you a starting point for exploring more on the topic and applying it in your projects. Stay tuned for part two, where we will use deequ for data quality testing within an ETL pipeline on AWS.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;more-resources&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#more-resources&quot; aria-label=&quot;Anchor link for: more-resources&quot;&gt;üîó&lt;&#x2F;a&gt;More resources&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;aws.amazon.com&#x2F;blogs&#x2F;big-data&#x2F;build-data-lineage-for-data-lakes-using-aws-glue-amazon-neptune-and-spline&#x2F;&quot;&gt;Build data lineage for data lakes using AWS Glue, Amazon Neptune, and Spline | AWS Big Data Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;benn.substack.com&#x2F;p&#x2F;data-contracts&quot;&gt;Fine, let&#x27;s talk about data contracts - by Benn Stancil&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;aws.amazon.com&#x2F;blogs&#x2F;big-data&#x2F;build-a-data-quality-score-card-using-aws-glue-databrew-amazon-athena-and-amazon-quicksight&#x2F;&quot;&gt;Build a data quality score card using AWS Glue DataBrew, Amazon Athena, and Amazon QuickSight | AWS Big Data Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
</feed>
